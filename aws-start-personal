#!/usr/bin/env bash

set -euxo pipefail

[ -n "${DOMAIN_NAME:-}" ] || DOMAIN_NAME=nhtzr.xyz

start_instance () {
  local instance_id="${1?}"
  is_running="$(
    aws --profile=personal ec2 describe-instances \
      --filter Name=instance-id,Values="${instance_id}" |
    jq -r --arg instanceId "${instance_id}" \
    '.Reservations[].Instances[] | select(.InstanceId == $instanceId) | .State.Name = "running"'
  )"

  if test -z "$is_running"; then
    echo "No instance ${instance_id}" >/dev/stderr
    return 1
  fi
  if test "$is_running" == 'true'; then
    echo "${instance_id} already running" >/dev/stderr
    return 0
  fi

  aws --profile=personal ec2 start-instances --instance-ids "${instance_id}"
}

get_machine_ip () {
  aws --profile=personal ec2 describe-instances |
  jq -re --arg instanceId "${instance_id}" \
    '.Reservations[].Instances[] | select(.InstanceId == $instanceId) | .PublicIpAddress'
}

get_domain_entry_id () {
  aws --profile=personal lightsail get-domain --domain-name "${DOMAIN_NAME}" |
    jq -re --arg domainName "${DOMAIN_NAME}" \
      '.domain.domainEntries[] | select(.type == "A" and .name == $domainName) | .id'
}

instance_id="${1?}"
start_instance "${instance_id}"

domain_entry_id="$(get_domain_entry_id)"
test -n "${domain_entry_id}"

machine_ip="$(get_machine_ip)"
test -n "${machine_ip}"

aws                                                                            \
  --profile=personal                                                           \
  lightsail update-domain-entry                                                \
  --domain-name "${DOMAIN_NAME}"                                               \
  --domain-entry                                                               \
  id="${domain_entry_id}",name="${DOMAIN_NAME}",type=A,target="${machine_ip}"

